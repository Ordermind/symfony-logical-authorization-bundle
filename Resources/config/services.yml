services:

  # Core services

  logauth.cache_warmer.permissions:
    class: Ordermind\LogicalAuthorizationBundle\EventListener\PermissionsCacheWarmer
    arguments: ['@logauth.service.permission_tree_builder']
    tags:
      - {name: kernel.cache_warmer}
    public: false

  logauth.security.request_voter:
    class: Ordermind\LogicalAuthorizationBundle\Security\RequestVoter
    arguments: ['@logauth.service.logauth_route']
    tags:
      - {name: security.voter}

  logauth.event_listener.add_route_permissions:
    class: Ordermind\LogicalAuthorizationBundle\EventListener\AddRoutePermissions
    arguments: ['@router']
    tags:
      - {name: kernel.event_listener, event: logauth.add_permissions, method: onAddPermissions}

  logauth.event_listener.add_app_config_permissions:
    class: Ordermind\LogicalAuthorizationBundle\EventListener\AddAppConfigPermissions
    arguments: ['%logauth.config%']
    tags:
      - {name: kernel.event_listener, event: logauth.add_permissions, method: onAddPermissions, priority: -250}

  logauth.service.logical_permissions_proxy:
    class: Ordermind\LogicalAuthorizationBundle\Services\LogicalPermissionsProxy

  logauth.service.helper:
    class: Ordermind\LogicalAuthorizationBundle\Services\Helper
    arguments: ['@security.token_storage', '@?logger']

  logauth.service.permission_tree_builder:
    class: Ordermind\LogicalAuthorizationBundle\Services\PermissionTreeBuilder
    arguments: ['@logauth.service.logical_permissions_proxy', '@event_dispatcher', '@cache.app']

  logauth.service.logauth_route:
    class: Ordermind\LogicalAuthorizationBundle\Services\LogicalAuthorizationRoute
    arguments: ['@logauth.service.logauth', '@logauth.service.permission_tree_builder', '@router', '@logauth.service.helper', '@?logauth.debug.collector']

  logauth.service.logauth_model:
    class: Ordermind\LogicalAuthorizationBundle\Services\LogicalAuthorizationModel
    arguments: ['@logauth.service.logauth', '@logauth.service.permission_tree_builder', '@logauth.service.helper', '@?logauth.debug.collector']

  logauth.service.logauth:
    class: Ordermind\LogicalAuthorizationBundle\Services\LogicalAuthorization
    arguments: ['@logauth.service.logical_permissions_proxy', '@logauth.service.helper']

  logauth.routing.yml_file_loader:
    class: Ordermind\LogicalAuthorizationBundle\Routing\YamlLoader
    arguments: ['@file_locator']
    tags:
      - {name: routing.loader}
    public: false

  logauth.routing.xml_file_loader:
    class: Ordermind\LogicalAuthorizationBundle\Routing\XmlLoader
    arguments: ['@file_locator']
    tags:
      - {name: routing.loader}
    public: false

  logauth.routing.annotation_file_loader:
    class: Ordermind\LogicalAuthorizationBundle\Routing\AnnotationFileLoader
    arguments: ['@file_locator', '@logauth.routing.annotation_class_loader']
    tags:
      - {name: routing.loader}
    public: false

  logauth.routing.annotation_dir_loader:
    class: Ordermind\LogicalAuthorizationBundle\Routing\AnnotationDirectoryLoader
    arguments: ['@file_locator', '@logauth.routing.annotation_class_loader']
    tags:
      - {name: routing.loader}
    public: false

  logauth.routing.annotation_class_loader:
    class: Ordermind\LogicalAuthorizationBundle\Routing\AnnotationClassLoader
    arguments: ['@annotation_reader']

  # Permission type handlers

  logauth.permission_type.flag:
    class: Ordermind\LogicalAuthorizationBundle\PermissionTypes\Flag\FlagManager
    tags:
      - {name: logauth.tag.permission_type}

  logauth.permission_type.flag.bypass_access:
    class: Ordermind\LogicalAuthorizationBundle\PermissionTypes\Flag\Flags\BypassAccess
    tags:
      - {name: logauth.tag.permission_type.flag}

  logauth.permission_type.flag.has_account:
    class: Ordermind\LogicalAuthorizationBundle\PermissionTypes\Flag\Flags\HasAccount
    tags:
      - {name: logauth.tag.permission_type.flag}

  logauth.permission_type.flag.is_author:
    class: Ordermind\LogicalAuthorizationBundle\PermissionTypes\Flag\Flags\IsAuthor
    tags:
      - {name: logauth.tag.permission_type.flag}

  logauth.permission_type.role:
    class: Ordermind\LogicalAuthorizationBundle\PermissionTypes\Role\Role
    tags:
      - {name: logauth.tag.permission_type}
