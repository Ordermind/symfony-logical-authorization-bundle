services:

  # Core services

  ordermind_logical_authorization.cache_warmer.permissions:
    class: Ordermind\LogicalAuthorizationBundle\EventListener\PermissionsCacheWarmer
    arguments: ['@ordermind_logical_authorization.service.permission_tree_builder']
    tags:
      - {name: kernel.cache_warmer}
    public: false

  ordermind_logical_authorization.event_listener.route_authorization:
    class: Ordermind\LogicalAuthorizationBundle\EventListener\RouteAuthorizationListener
    arguments: ['@ordermind_logical_authorization.service.logical_authorization_route']
    tags:
      - {name: kernel.event_listener, event: kernel.request, method: onKernelRequest}

  ordermind_logical_authorization.event_listener.add_route_permissions:
    class: Ordermind\LogicalAuthorizationBundle\EventListener\AddRoutePermissions
    arguments: ['@router']
    tags:
      - {name: kernel.event_listener, event: logical_authorization.add_permissions, method: onAddPermissions}

  ordermind_logical_authorization.event_listener.add_app_config_permissions:
    class: Ordermind\LogicalAuthorizationBundle\EventListener\AddAppConfigPermissions
    arguments: ['%ordermind_logical_authorization.config%']
    tags:
      - {name: kernel.event_listener, event: logical_authorization.add_permissions, method: onAddPermissions, priority: -250}

  ordermind_logical_authorization.service.logical_permissions_proxy:
    class: Ordermind\LogicalAuthorizationBundle\Services\LogicalPermissionsProxy

  ordermind_logical_authorization.service.helper:
    class: Ordermind\LogicalAuthorizationBundle\Services\Helper
    arguments: ['@security.token_storage', '@?logger']

  ordermind_logical_authorization.service.permission_tree_builder:
    class: Ordermind\LogicalAuthorizationBundle\Services\PermissionTreeBuilder
    arguments: ['@ordermind_logical_authorization.service.logical_permissions_proxy', '@event_dispatcher', '@cache.app']

  ordermind_logical_authorization.service.logical_authorization_route:
    class: Ordermind\LogicalAuthorizationBundle\Services\LogicalAuthorizationRoute
    arguments: ['@ordermind_logical_authorization.service.logical_authorization', '@ordermind_logical_authorization.service.permission_tree_builder', '@router', '@ordermind_logical_authorization.service.helper']

  ordermind_logical_authorization.service.logical_authorization_model:
    class: Ordermind\LogicalAuthorizationBundle\Services\LogicalAuthorizationModel
    arguments: ['@ordermind_logical_authorization.service.logical_authorization', '@ordermind_logical_authorization.service.permission_tree_builder', '@ordermind_logical_authorization.service.helper']

  ordermind_logical_authorization.service.logical_authorization:
    class: Ordermind\LogicalAuthorizationBundle\Services\LogicalAuthorization
    arguments: ['@ordermind_logical_authorization.service.logical_permissions_proxy', '@ordermind_logical_authorization.service.helper']

  # Permission type handlers

  ordermind_logical_authorization.permission_type.flag:
    class: Ordermind\LogicalAuthorizationBundle\PermissionTypes\Flag\FlagManager
    tags:
      - {name: ordermind_logical_authorization.tag.permission_type}

  ordermind_logical_authorization.permission_type.flag.bypass_access:
    class: Ordermind\LogicalAuthorizationBundle\PermissionTypes\Flag\Flags\BypassAccess
    tags:
      - {name: ordermind_logical_authorization.tag.permission_type.flag}

  ordermind_logical_authorization.permission_type.flag.has_account:
    class: Ordermind\LogicalAuthorizationBundle\PermissionTypes\Flag\Flags\HasAccount
    tags:
      - {name: ordermind_logical_authorization.tag.permission_type.flag}

  ordermind_logical_authorization.permission_type.flag.is_author:
    class: Ordermind\LogicalAuthorizationBundle\PermissionTypes\Flag\Flags\IsAuthor
    tags:
      - {name: ordermind_logical_authorization.tag.permission_type.flag}

  ordermind_logical_authorization.permission_type.role:
    class: Ordermind\LogicalAuthorizationBundle\PermissionTypes\Role\Role
    tags:
      - {name: ordermind_logical_authorization.tag.permission_type}
