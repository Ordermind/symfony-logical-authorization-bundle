imports:
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    secret:          TestSecret
    test: ~
    router:
        type: logauth_yml
        resource: "%kernel.project_dir%/config/routing.yml"
        strict_requirements: ~
    default_locale:  "%locale%"
    trusted_hosts:   ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        save_path:   "%kernel.project_dir%/var/sessions/%kernel.environment%"
        storage_id: session.storage.mock_file
    fragments:       ~
    http_method_override: true
    #cache:
        #app: cache.adapter.null

# LogicalAuthorization Configuration
logauth:
    permissions:
        routes:
            route_override_permissions:
                role: ROLE_ADMIN
        route_patterns:
            ^/test/route-:
                no_bypass: true
                0: false
            ^/test/pattern-: true
        models:
            Ordermind\LogicalAuthorizationBundle\Tests\Fixtures\Model\TestModelBoolean:
                create: true
                read: false
                update: true
                delete: false
                fields:
                    field1:
                        get: true
                        set: false
            Ordermind\LogicalAuthorizationBundle\Tests\Fixtures\Model\TestModelHasAccountNoInterface:
                create:
                    flag: user_has_account
                read:
                    flag: user_has_account
                update:
                    flag: user_has_account
                delete:
                    flag: user_has_account
                fields:
                    field1:
                        get:
                            flag: user_has_account
                        set:
                            flag: user_has_account
            Ordermind\LogicalAuthorizationBundle\Tests\Fixtures\Model\TestModelNoBypass:
                create:
                    no_bypass: true
                    0: false
                read:
                    no_bypass: true
                    0: false
                update:
                    no_bypass: true
                    0: false
                delete:
                    no_bypass: true
                    0: false
                fields:
                    field1:
                        get:
                            no_bypass: true
                            0: false

                        set:
                            no_bypass: true
                            0: false
            Ordermind\LogicalAuthorizationBundle\Tests\Fixtures\Model\TestModelRoleAuthor:
                create:
                    role: ROLE_ADMIN
                read:
                    OR:
                        role: ROLE_ADMIN
                        flag: user_is_author
                update:
                    OR:
                        role: ROLE_ADMIN
                        flag: user_is_author
                delete:
                    OR:
                        role: ROLE_ADMIN
                        flag: user_is_author
                fields:
                    field1:
                        get:
                            role: ROLE_ADMIN
                            flag: user_is_author
                        set:
                            role: ROLE_ADMIN
                            flag: user_is_author
            Ordermind\LogicalAuthorizationBundle\Tests\Fixtures\Model\TestUser:
                create:
                    role: ROLE_ADMIN
                read:
                    OR:
                        role: ROLE_ADMIN
                        flag: user_is_author
                update:
                    OR:
                        role: ROLE_ADMIN
                        flag: user_is_author
                delete:
                    no_bypass:
                        flag: user_is_author
                    AND:
                        role: ROLE_ADMIN
                        flag:
                            NOT: user_is_author
