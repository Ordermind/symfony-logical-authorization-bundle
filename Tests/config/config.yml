imports:
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    secret:          TestSecret
    test: ~
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
        storage_id: session.storage.mock_file
    fragments:       ~
    http_method_override: true
    assets: ~
    #cache:
        #app: cache.adapter.null

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     127.0.0.1
        port:     3306
        dbname:   logauth
        user:     root
        password: ""
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        mappings:
            TestEntities:
                type: annotation
                dir: "%kernel.root_dir%/Fixtures/Entity"
                is_bundle: false
                prefix: Ordermind\LogicalAuthorizationBundle\Tests\Fixtures\Entity
                alias: TestEntities

# LogicalAuthorization Configuration
ordermind_logical_authorization:
  permissions:
    routes:
      route_override_permissions:
        role: ROLE_ADMIN
    route_patterns:
      ^/test/route-:
        no_bypass: true
        0: false
      ^/test/pattern-: true
    models:
      Ordermind\LogicalAuthorizationBundle\Tests\Fixtures\Entity\TestEntity:
        create: true
        read: false
        update: true
        delete: false
        fields:
          field1:
            get: true
            set: false
